// Array practise.cpp : Defines the entry point for the console application.
//
//reverse array

//through iteration
#include "stdafx.h"
#include<iostream>
using namespace std;

//void reversearr(int arr[], int start, int end)
//{
//	while (start < end)
//	{
//		int temp = arr[start];
//		arr[start] = arr[end];
//		arr[end] = temp;	
//		start++;
//		end--;
//	}
//}
//void print(int arr[],int n)
//{
//	
//	for (int i = 0; i < n; i++)
//	{
//		cout << arr[i] << endl;
//	}
//}
//int main()
//{
//	int arr[] = { 1, 2, 3, 4, 5 };
//	int n = sizeof(arr)/sizeof(arr[0]);
//	cout << n;
//	
//	cout << "before reversing" << endl;
//	print(arr,n);
//
//	reversearr(arr, 0, n - 1);
//	cout << "After reversal" << endl;
//	print(arr,n);
//	system("pause");
//	return 0;
//}
//
////through recursion:
//
//#include "stdafx.h"
//#include<iostream>
//using namespace std;
//
//void reversearr(int arr[], int start, int end)
//{
//	if (start >= end){
//		return;
//	}
//		int temp = arr[start];
//		arr[start] = arr[end];
//		arr[end] = temp;
//		start++;
//		end--;
//		reversearr(arr, start++, end--);
//	
//}
//void print(int arr[], int n)
//{
//
//	for (int i = 0; i < n; i++)
//	{
//		cout << arr[i] << endl;
//	}
//}
//int main()
//{
//	int arr[] = { 1, 2, 3, 4, 5 };
//	int n = sizeof(arr) / sizeof(arr[0]);
//	cout << n;
//
//	cout << "before reversing" << endl;
//	print(arr, n);
//
//	reversearr(arr, 0, n - 1);
//	cout << "After reversal" << endl;
//	print(arr, n);
//	system("pause");
//	return 0;
//}


//find min and mmax number
//void findmin(int arr[],int start,int end,int min)
//{
//	
//	while (start <= end)
//	{
//		if (min <= arr[start])
//		{			
//			start++;
//		}
//		else{
//			min = arr[start];
//		}
//	}
//	cout << min;
//}
//void findmax(int arr[], int start, int end, int max)
//{
//
//	while (start <= end)
//	{
//		if (max >= arr[start])
//		{
//			start++;
//		}
//		else{
//			max = arr[start];
//		}
//	}
//	cout << max<<endl;
//}
//int main()
//{
//	int arr[] = { 3, 4, 56, 2, 5 };
//	int n = sizeof(arr) /sizeof arr[0];
//	cout << "Mn number is" << endl;
//	findmin(arr, 0, n-1, arr[0]);
//	cout << "MX num is" << endl;
//	findmax(arr, 0, n - 1, arr[0]);
//	system("pause");
//	return 0;
//}


//swap the alternate
////////////////////////////////////////////
////////////////////////////////////////////void swap(int a,int b)
////////////////////////////////////////////{
////////////////////////////////////////////	int temp = a;
////////////////////////////////////////////	a = b;
////////////////////////////////////////////	b = temp;
////////////////////////////////////////////}
////////////////////////////////////////////void Alt_swap(int arr[],int n)
////////////////////////////////////////////{/*
////////////////////////////////////////////	for(int i = 0; i < n; i+=2)
////////////////////////////////////////////	{
////////////////////////////////////////////		if (i + 1 < n)
////////////////////////////////////////////		{
////////////////////////////////////////////			swap(arr[i], arr[i + 1]);	
////////////////////////////////////////////			
////////////////////////////////////////////		}
////////////////////////////////////////////	}*/
////////////////////////////////////////////	int a = 0;
////////////////////////////////////////////	int b = 1;
////////////////////////////////////////////	while (b <n)
////////////////////////////////////////////	{
////////////////////////////////////////////
////////////////////////////////////////////		swap(arr[a],arr[
////////////////////////////////////////////			b]);
////////////////////////////////////////////		a += 2; b += 2;
////////////////////////////////////////////
////////////////////////////////////////////	}
////////////////////////////////////////////}
////////////////////////////////////////////void print(int arr[], int n)
////////////////////////////////////////////{
////////////////////////////////////////////	for (int i = 0; i < n; i++)
////////////////////////////////////////////	{
////////////////////////////////////////////		cout << arr[i] << endl;
////////////////////////////////////////////	}
////////////////////////////////////////////}
////////////////////////////////////////////int main()
////////////////////////////////////////////{
////////////////////////////////////////////	int arr[] = { 1, 2, 3, 4, 5, 6};
////////////////////////////////////////////	//int n = sizeof(arr[]) / sizeof(arr[0]);
////////////////////////////////////////////	cout << "Before alternate swaping"
////////////////////////////////////////////		<< endl;
////////////////////////////////////////////	print(arr, 6);
////////////////////////////////////////////
////////////////////////////////////////////	Alt_swap(arr, 6);
////////////////////////////////////////////		cout << "After alternate swaping" << endl;
////////////////////////////////////////////		for (int i = 0; i < 6; i++)
////////////////////////////////////////////		{
////////////////////////////////////////////			cout << arr[i] << endl;
////////////////////////////////////////////		}
////////////////////////////////////////////	system("pause");
////////////////////////////////////////////	return 0;
////////////////////////////////////////////}


//find the unique

void find_unique(int arr[],int n)
{
	int ans=0;
	for (int i = 0; i < n; i++)
	{
		ans = ans^arr[i];
	}
	cout << ans<<endl;
}
int main()
{
	int arr[] = { 1, 3, 5, 2, 5, 3, 1 };
	int n = sizeof(arr) / sizeof(arr[0]);
	find_unique(arr,n);
	system("pause");
	return 0;
}